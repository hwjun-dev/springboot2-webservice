/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */
 
 // 프로젝트의 플러그인 의존성 관리를 위한 설정
buildscript {
	ext { // build.gradle에서 사용할 전역변수 설정
		springBootVersion = '2.1.7.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

// 앞서 선언한 플러그인 의존성들을 적용할 것인지 결정하는 코드
// java와 springBoot를 사용하기 위한 필수 플러그인 4개
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' // 스프링 부트의 의존성들을 관리해주는 플러그인이라 꼭 추가해야함

// 각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지 정함
// 기본적으로 mavenCentral를 많이 사용하지만 최근에는 라이브러리 업로드 난이도 때문에 jcenter도 많이 사용
repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// 프로젝트 개발에 필요한 의존성들을 선언
dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compileOnly ('org.projectlombok:lombok')
	annotationProcessor 'org.projectlombok:lombok'
	// 스프링 부트용 Spring Dta Jpa 추상화 라이브러리, 스프링 부트 버전에 맞춰 자동으로 JPA관련 라이브러리들의 버전을 관리
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	// 인메모리 관게형 데이터베이스
	// 별도의 설치가 필요 없이 프로젝트 의존성만으로 관리
	// 메모리에서 실행되기 때문에 애플리케이션을 재시작할 때마다 초기화-> 테스트 용도로 많이 사용
	compile('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
